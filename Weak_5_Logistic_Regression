{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMEYm3O8jFHndDFZQhrT7pR"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Logistic Regression\n","\n","TA: Sibel Kapan\n","\n","Reference : https://www.kaggle.com/code/prashant111/logistic-regression-classifier-tutorial/notebook#14.-Check-accuracy-score-"],"metadata":{"id":"_XKZAbsi6BhD"}},{"cell_type":"code","execution_count":27,"metadata":{"id":"LPGBN0xb58gN","executionInfo":{"status":"ok","timestamp":1667808693770,"user_tz":-180,"elapsed":321,"user":{"displayName":"Sibel Kapan","userId":"17947474169613013829"}}},"outputs":[],"source":["import numpy as np \n","import pandas as pd \n","import matplotlib.pyplot as plt \n","import seaborn as sns"]},{"cell_type":"code","source":["\n","url = 'https://raw.githubusercontent.com/sibelkapan/AIN313_Datasets/main/weatherAUS.csv'\n","df = pd.read_csv(url)"],"metadata":{"id":"hNBF30KP8gM0","executionInfo":{"status":"ok","timestamp":1667808694785,"user_tz":-180,"elapsed":591,"user":{"displayName":"Sibel Kapan","userId":"17947474169613013829"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","source":["df.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":630},"id":"nq9QgDdt8u3p","executionInfo":{"status":"ok","timestamp":1667808694786,"user_tz":-180,"elapsed":40,"user":{"displayName":"Sibel Kapan","userId":"17947474169613013829"}},"outputId":"8c1ec35e-d840-48d6-dbeb-05b8d5304867"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Date Location  MinTemp  MaxTemp  Rainfall  Evaporation  Sunshine  \\\n","0  2008-12-01   Albury     13.4     22.9       0.6          NaN       NaN   \n","1  2008-12-02   Albury      7.4     25.1       0.0          NaN       NaN   \n","2  2008-12-03   Albury     12.9     25.7       0.0          NaN       NaN   \n","3  2008-12-04   Albury      9.2     28.0       0.0          NaN       NaN   \n","4  2008-12-05   Albury     17.5     32.3       1.0          NaN       NaN   \n","5  2008-12-06   Albury     14.6     29.7       0.2          NaN       NaN   \n","6  2008-12-07   Albury     14.3     25.0       0.0          NaN       NaN   \n","7  2008-12-08   Albury      7.7     26.7       0.0          NaN       NaN   \n","8  2008-12-09   Albury      9.7     31.9       0.0          NaN       NaN   \n","9  2008-12-10   Albury     13.1     30.1       1.4          NaN       NaN   \n","\n","  WindGustDir  WindGustSpeed WindDir9am  ... Humidity9am  Humidity3pm  \\\n","0           W           44.0          W  ...        71.0         22.0   \n","1         WNW           44.0        NNW  ...        44.0         25.0   \n","2         WSW           46.0          W  ...        38.0         30.0   \n","3          NE           24.0         SE  ...        45.0         16.0   \n","4           W           41.0        ENE  ...        82.0         33.0   \n","5         WNW           56.0          W  ...        55.0         23.0   \n","6           W           50.0         SW  ...        49.0         19.0   \n","7           W           35.0        SSE  ...        48.0         19.0   \n","8         NNW           80.0         SE  ...        42.0          9.0   \n","9           W           28.0          S  ...        58.0         27.0   \n","\n","   Pressure9am  Pressure3pm  Cloud9am  Cloud3pm  Temp9am  Temp3pm  RainToday  \\\n","0       1007.7       1007.1       8.0       NaN     16.9     21.8         No   \n","1       1010.6       1007.8       NaN       NaN     17.2     24.3         No   \n","2       1007.6       1008.7       NaN       2.0     21.0     23.2         No   \n","3       1017.6       1012.8       NaN       NaN     18.1     26.5         No   \n","4       1010.8       1006.0       7.0       8.0     17.8     29.7         No   \n","5       1009.2       1005.4       NaN       NaN     20.6     28.9         No   \n","6       1009.6       1008.2       1.0       NaN     18.1     24.6         No   \n","7       1013.4       1010.1       NaN       NaN     16.3     25.5         No   \n","8       1008.9       1003.6       NaN       NaN     18.3     30.2         No   \n","9       1007.0       1005.7       NaN       NaN     20.1     28.2        Yes   \n","\n","   RainTomorrow  \n","0            No  \n","1            No  \n","2            No  \n","3            No  \n","4            No  \n","5            No  \n","6            No  \n","7            No  \n","8           Yes  \n","9            No  \n","\n","[10 rows x 23 columns]"],"text/html":["\n","  <div id=\"df-0c718e24-1d24-4d43-b79f-f8e75bb6b7c4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Location</th>\n","      <th>MinTemp</th>\n","      <th>MaxTemp</th>\n","      <th>Rainfall</th>\n","      <th>Evaporation</th>\n","      <th>Sunshine</th>\n","      <th>WindGustDir</th>\n","      <th>WindGustSpeed</th>\n","      <th>WindDir9am</th>\n","      <th>...</th>\n","      <th>Humidity9am</th>\n","      <th>Humidity3pm</th>\n","      <th>Pressure9am</th>\n","      <th>Pressure3pm</th>\n","      <th>Cloud9am</th>\n","      <th>Cloud3pm</th>\n","      <th>Temp9am</th>\n","      <th>Temp3pm</th>\n","      <th>RainToday</th>\n","      <th>RainTomorrow</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2008-12-01</td>\n","      <td>Albury</td>\n","      <td>13.4</td>\n","      <td>22.9</td>\n","      <td>0.6</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>W</td>\n","      <td>44.0</td>\n","      <td>W</td>\n","      <td>...</td>\n","      <td>71.0</td>\n","      <td>22.0</td>\n","      <td>1007.7</td>\n","      <td>1007.1</td>\n","      <td>8.0</td>\n","      <td>NaN</td>\n","      <td>16.9</td>\n","      <td>21.8</td>\n","      <td>No</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2008-12-02</td>\n","      <td>Albury</td>\n","      <td>7.4</td>\n","      <td>25.1</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>WNW</td>\n","      <td>44.0</td>\n","      <td>NNW</td>\n","      <td>...</td>\n","      <td>44.0</td>\n","      <td>25.0</td>\n","      <td>1010.6</td>\n","      <td>1007.8</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>17.2</td>\n","      <td>24.3</td>\n","      <td>No</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2008-12-03</td>\n","      <td>Albury</td>\n","      <td>12.9</td>\n","      <td>25.7</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>WSW</td>\n","      <td>46.0</td>\n","      <td>W</td>\n","      <td>...</td>\n","      <td>38.0</td>\n","      <td>30.0</td>\n","      <td>1007.6</td>\n","      <td>1008.7</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","      <td>21.0</td>\n","      <td>23.2</td>\n","      <td>No</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2008-12-04</td>\n","      <td>Albury</td>\n","      <td>9.2</td>\n","      <td>28.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NE</td>\n","      <td>24.0</td>\n","      <td>SE</td>\n","      <td>...</td>\n","      <td>45.0</td>\n","      <td>16.0</td>\n","      <td>1017.6</td>\n","      <td>1012.8</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>18.1</td>\n","      <td>26.5</td>\n","      <td>No</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2008-12-05</td>\n","      <td>Albury</td>\n","      <td>17.5</td>\n","      <td>32.3</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>W</td>\n","      <td>41.0</td>\n","      <td>ENE</td>\n","      <td>...</td>\n","      <td>82.0</td>\n","      <td>33.0</td>\n","      <td>1010.8</td>\n","      <td>1006.0</td>\n","      <td>7.0</td>\n","      <td>8.0</td>\n","      <td>17.8</td>\n","      <td>29.7</td>\n","      <td>No</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2008-12-06</td>\n","      <td>Albury</td>\n","      <td>14.6</td>\n","      <td>29.7</td>\n","      <td>0.2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>WNW</td>\n","      <td>56.0</td>\n","      <td>W</td>\n","      <td>...</td>\n","      <td>55.0</td>\n","      <td>23.0</td>\n","      <td>1009.2</td>\n","      <td>1005.4</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>20.6</td>\n","      <td>28.9</td>\n","      <td>No</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2008-12-07</td>\n","      <td>Albury</td>\n","      <td>14.3</td>\n","      <td>25.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>W</td>\n","      <td>50.0</td>\n","      <td>SW</td>\n","      <td>...</td>\n","      <td>49.0</td>\n","      <td>19.0</td>\n","      <td>1009.6</td>\n","      <td>1008.2</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>18.1</td>\n","      <td>24.6</td>\n","      <td>No</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>2008-12-08</td>\n","      <td>Albury</td>\n","      <td>7.7</td>\n","      <td>26.7</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>W</td>\n","      <td>35.0</td>\n","      <td>SSE</td>\n","      <td>...</td>\n","      <td>48.0</td>\n","      <td>19.0</td>\n","      <td>1013.4</td>\n","      <td>1010.1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>16.3</td>\n","      <td>25.5</td>\n","      <td>No</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>2008-12-09</td>\n","      <td>Albury</td>\n","      <td>9.7</td>\n","      <td>31.9</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NNW</td>\n","      <td>80.0</td>\n","      <td>SE</td>\n","      <td>...</td>\n","      <td>42.0</td>\n","      <td>9.0</td>\n","      <td>1008.9</td>\n","      <td>1003.6</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>18.3</td>\n","      <td>30.2</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>2008-12-10</td>\n","      <td>Albury</td>\n","      <td>13.1</td>\n","      <td>30.1</td>\n","      <td>1.4</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>W</td>\n","      <td>28.0</td>\n","      <td>S</td>\n","      <td>...</td>\n","      <td>58.0</td>\n","      <td>27.0</td>\n","      <td>1007.0</td>\n","      <td>1005.7</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>20.1</td>\n","      <td>28.2</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10 rows × 23 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0c718e24-1d24-4d43-b79f-f8e75bb6b7c4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0c718e24-1d24-4d43-b79f-f8e75bb6b7c4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0c718e24-1d24-4d43-b79f-f8e75bb6b7c4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["col_names = df.columns\n","\n","col_names"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SJauJT81L_a1","executionInfo":{"status":"ok","timestamp":1667808694787,"user_tz":-180,"elapsed":36,"user":{"displayName":"Sibel Kapan","userId":"17947474169613013829"}},"outputId":"8b466039-0cde-4da5-9feb-f465415999aa"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Date', 'Location', 'MinTemp', 'MaxTemp', 'Rainfall', 'Evaporation',\n","       'Sunshine', 'WindGustDir', 'WindGustSpeed', 'WindDir9am', 'WindDir3pm',\n","       'WindSpeed9am', 'WindSpeed3pm', 'Humidity9am', 'Humidity3pm',\n","       'Pressure9am', 'Pressure3pm', 'Cloud9am', 'Cloud3pm', 'Temp9am',\n","       'Temp3pm', 'RainToday', 'RainTomorrow'],\n","      dtype='object')"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["df.info()"],"metadata":{"id":"xWWSRkxHMtmx","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667808694788,"user_tz":-180,"elapsed":31,"user":{"displayName":"Sibel Kapan","userId":"17947474169613013829"}},"outputId":"38594fd1-0084-408c-90a4-cf3e0ebafb19"},"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 145460 entries, 0 to 145459\n","Data columns (total 23 columns):\n"," #   Column         Non-Null Count   Dtype  \n","---  ------         --------------   -----  \n"," 0   Date           145460 non-null  object \n"," 1   Location       145460 non-null  object \n"," 2   MinTemp        143975 non-null  float64\n"," 3   MaxTemp        144199 non-null  float64\n"," 4   Rainfall       142199 non-null  float64\n"," 5   Evaporation    82670 non-null   float64\n"," 6   Sunshine       75625 non-null   float64\n"," 7   WindGustDir    135134 non-null  object \n"," 8   WindGustSpeed  135197 non-null  float64\n"," 9   WindDir9am     134894 non-null  object \n"," 10  WindDir3pm     141232 non-null  object \n"," 11  WindSpeed9am   143693 non-null  float64\n"," 12  WindSpeed3pm   142398 non-null  float64\n"," 13  Humidity9am    142806 non-null  float64\n"," 14  Humidity3pm    140953 non-null  float64\n"," 15  Pressure9am    130395 non-null  float64\n"," 16  Pressure3pm    130432 non-null  float64\n"," 17  Cloud9am       89572 non-null   float64\n"," 18  Cloud3pm       86102 non-null   float64\n"," 19  Temp9am        143693 non-null  float64\n"," 20  Temp3pm        141851 non-null  float64\n"," 21  RainToday      142199 non-null  object \n"," 22  RainTomorrow   142193 non-null  object \n","dtypes: float64(16), object(7)\n","memory usage: 25.5+ MB\n"]}]},{"cell_type":"code","source":["categorical = [var for var in df.columns if df[var].dtype=='O']\n","\n","print('There are {} categorical variables\\n'.format(len(categorical)))\n","\n","print('The categorical variables are :', categorical)"],"metadata":{"id":"KrLxi4_-Mtjv","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667808694789,"user_tz":-180,"elapsed":26,"user":{"displayName":"Sibel Kapan","userId":"17947474169613013829"}},"outputId":"7bf026dd-bd39-4da4-e67c-5eeb9527eca5"},"execution_count":32,"outputs":[{"output_type":"stream","name":"stdout","text":["There are 7 categorical variables\n","\n","The categorical variables are : ['Date', 'Location', 'WindGustDir', 'WindDir9am', 'WindDir3pm', 'RainToday', 'RainTomorrow']\n"]}]},{"cell_type":"code","source":["df[categorical].isnull().sum()"],"metadata":{"id":"ZYemO9vhMtgk","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667808694790,"user_tz":-180,"elapsed":21,"user":{"displayName":"Sibel Kapan","userId":"17947474169613013829"}},"outputId":"d69481df-b989-457d-b4ae-cddbf4f9f98f"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date                0\n","Location            0\n","WindGustDir     10326\n","WindDir9am      10566\n","WindDir3pm       4228\n","RainToday        3261\n","RainTomorrow     3267\n","dtype: int64"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["cat1 = [var for var in categorical if df[var].isnull().sum()!=0]\n","\n","print(df[cat1].isnull().sum())"],"metadata":{"id":"Jt2gGqQQMtdb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667808695095,"user_tz":-180,"elapsed":322,"user":{"displayName":"Sibel Kapan","userId":"17947474169613013829"}},"outputId":"8fd46aca-54fa-4897-e59e-e6f31762f24d"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["WindGustDir     10326\n","WindDir9am      10566\n","WindDir3pm       4228\n","RainToday        3261\n","RainTomorrow     3267\n","dtype: int64\n"]}]},{"cell_type":"code","source":["df['Date'].dtypes"],"metadata":{"id":"5TcP2hIvMtbA","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667808695097,"user_tz":-180,"elapsed":36,"user":{"displayName":"Sibel Kapan","userId":"17947474169613013829"}},"outputId":"f25e9fb9-b95b-48db-a27b-bf0595b17f05"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dtype('O')"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["df['Date'] = pd.to_datetime(df['Date'])\n","df['Month'] = df['Date'].dt.month\n","df['Day'] = df['Date'].dt.day\n","df['Year'] = df['Date'].dt.year"],"metadata":{"id":"_ttFu5JBqU_k","executionInfo":{"status":"ok","timestamp":1667808695099,"user_tz":-180,"elapsed":31,"user":{"displayName":"Sibel Kapan","userId":"17947474169613013829"}}},"execution_count":36,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":386},"id":"-jQ-rJamqU8l","executionInfo":{"status":"ok","timestamp":1667808695101,"user_tz":-180,"elapsed":32,"user":{"displayName":"Sibel Kapan","userId":"17947474169613013829"}},"outputId":"a842b85d-5113-40e7-eb90-aeab0d2c9f3d"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        Date Location  MinTemp  MaxTemp  Rainfall  Evaporation  Sunshine  \\\n","0 2008-12-01   Albury     13.4     22.9       0.6          NaN       NaN   \n","1 2008-12-02   Albury      7.4     25.1       0.0          NaN       NaN   \n","2 2008-12-03   Albury     12.9     25.7       0.0          NaN       NaN   \n","3 2008-12-04   Albury      9.2     28.0       0.0          NaN       NaN   \n","4 2008-12-05   Albury     17.5     32.3       1.0          NaN       NaN   \n","\n","  WindGustDir  WindGustSpeed WindDir9am  ... Pressure3pm  Cloud9am  Cloud3pm  \\\n","0           W           44.0          W  ...      1007.1       8.0       NaN   \n","1         WNW           44.0        NNW  ...      1007.8       NaN       NaN   \n","2         WSW           46.0          W  ...      1008.7       NaN       2.0   \n","3          NE           24.0         SE  ...      1012.8       NaN       NaN   \n","4           W           41.0        ENE  ...      1006.0       7.0       8.0   \n","\n","   Temp9am  Temp3pm  RainToday  RainTomorrow  Month  Day  Year  \n","0     16.9     21.8         No            No     12    1  2008  \n","1     17.2     24.3         No            No     12    2  2008  \n","2     21.0     23.2         No            No     12    3  2008  \n","3     18.1     26.5         No            No     12    4  2008  \n","4     17.8     29.7         No            No     12    5  2008  \n","\n","[5 rows x 26 columns]"],"text/html":["\n","  <div id=\"df-57605a08-39f6-4096-b24c-818d55c549db\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Location</th>\n","      <th>MinTemp</th>\n","      <th>MaxTemp</th>\n","      <th>Rainfall</th>\n","      <th>Evaporation</th>\n","      <th>Sunshine</th>\n","      <th>WindGustDir</th>\n","      <th>WindGustSpeed</th>\n","      <th>WindDir9am</th>\n","      <th>...</th>\n","      <th>Pressure3pm</th>\n","      <th>Cloud9am</th>\n","      <th>Cloud3pm</th>\n","      <th>Temp9am</th>\n","      <th>Temp3pm</th>\n","      <th>RainToday</th>\n","      <th>RainTomorrow</th>\n","      <th>Month</th>\n","      <th>Day</th>\n","      <th>Year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2008-12-01</td>\n","      <td>Albury</td>\n","      <td>13.4</td>\n","      <td>22.9</td>\n","      <td>0.6</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>W</td>\n","      <td>44.0</td>\n","      <td>W</td>\n","      <td>...</td>\n","      <td>1007.1</td>\n","      <td>8.0</td>\n","      <td>NaN</td>\n","      <td>16.9</td>\n","      <td>21.8</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>12</td>\n","      <td>1</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2008-12-02</td>\n","      <td>Albury</td>\n","      <td>7.4</td>\n","      <td>25.1</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>WNW</td>\n","      <td>44.0</td>\n","      <td>NNW</td>\n","      <td>...</td>\n","      <td>1007.8</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>17.2</td>\n","      <td>24.3</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>12</td>\n","      <td>2</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2008-12-03</td>\n","      <td>Albury</td>\n","      <td>12.9</td>\n","      <td>25.7</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>WSW</td>\n","      <td>46.0</td>\n","      <td>W</td>\n","      <td>...</td>\n","      <td>1008.7</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","      <td>21.0</td>\n","      <td>23.2</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>12</td>\n","      <td>3</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2008-12-04</td>\n","      <td>Albury</td>\n","      <td>9.2</td>\n","      <td>28.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NE</td>\n","      <td>24.0</td>\n","      <td>SE</td>\n","      <td>...</td>\n","      <td>1012.8</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>18.1</td>\n","      <td>26.5</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>12</td>\n","      <td>4</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2008-12-05</td>\n","      <td>Albury</td>\n","      <td>17.5</td>\n","      <td>32.3</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>W</td>\n","      <td>41.0</td>\n","      <td>ENE</td>\n","      <td>...</td>\n","      <td>1006.0</td>\n","      <td>7.0</td>\n","      <td>8.0</td>\n","      <td>17.8</td>\n","      <td>29.7</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>12</td>\n","      <td>5</td>\n","      <td>2008</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 26 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-57605a08-39f6-4096-b24c-818d55c549db')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-57605a08-39f6-4096-b24c-818d55c549db button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-57605a08-39f6-4096-b24c-818d55c549db');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["df.drop('Date', axis=1, inplace = True)"],"metadata":{"id":"Izjwg3t-qU29","executionInfo":{"status":"ok","timestamp":1667808695102,"user_tz":-180,"elapsed":30,"user":{"displayName":"Sibel Kapan","userId":"17947474169613013829"}}},"execution_count":38,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":299},"id":"1j690-vxqU0J","executionInfo":{"status":"ok","timestamp":1667808695103,"user_tz":-180,"elapsed":30,"user":{"displayName":"Sibel Kapan","userId":"17947474169613013829"}},"outputId":"bb601959-0bf7-49f4-ca18-4fb653aac6d2"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Location  MinTemp  MaxTemp  Rainfall  Evaporation  Sunshine WindGustDir  \\\n","0   Albury     13.4     22.9       0.6          NaN       NaN           W   \n","1   Albury      7.4     25.1       0.0          NaN       NaN         WNW   \n","2   Albury     12.9     25.7       0.0          NaN       NaN         WSW   \n","3   Albury      9.2     28.0       0.0          NaN       NaN          NE   \n","4   Albury     17.5     32.3       1.0          NaN       NaN           W   \n","\n","   WindGustSpeed WindDir9am WindDir3pm  ...  Pressure3pm  Cloud9am  Cloud3pm  \\\n","0           44.0          W        WNW  ...       1007.1       8.0       NaN   \n","1           44.0        NNW        WSW  ...       1007.8       NaN       NaN   \n","2           46.0          W        WSW  ...       1008.7       NaN       2.0   \n","3           24.0         SE          E  ...       1012.8       NaN       NaN   \n","4           41.0        ENE         NW  ...       1006.0       7.0       8.0   \n","\n","   Temp9am  Temp3pm  RainToday  RainTomorrow  Month  Day  Year  \n","0     16.9     21.8         No            No     12    1  2008  \n","1     17.2     24.3         No            No     12    2  2008  \n","2     21.0     23.2         No            No     12    3  2008  \n","3     18.1     26.5         No            No     12    4  2008  \n","4     17.8     29.7         No            No     12    5  2008  \n","\n","[5 rows x 25 columns]"],"text/html":["\n","  <div id=\"df-0d2e2764-2d11-4c90-8563-8040723c2ab4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Location</th>\n","      <th>MinTemp</th>\n","      <th>MaxTemp</th>\n","      <th>Rainfall</th>\n","      <th>Evaporation</th>\n","      <th>Sunshine</th>\n","      <th>WindGustDir</th>\n","      <th>WindGustSpeed</th>\n","      <th>WindDir9am</th>\n","      <th>WindDir3pm</th>\n","      <th>...</th>\n","      <th>Pressure3pm</th>\n","      <th>Cloud9am</th>\n","      <th>Cloud3pm</th>\n","      <th>Temp9am</th>\n","      <th>Temp3pm</th>\n","      <th>RainToday</th>\n","      <th>RainTomorrow</th>\n","      <th>Month</th>\n","      <th>Day</th>\n","      <th>Year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Albury</td>\n","      <td>13.4</td>\n","      <td>22.9</td>\n","      <td>0.6</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>W</td>\n","      <td>44.0</td>\n","      <td>W</td>\n","      <td>WNW</td>\n","      <td>...</td>\n","      <td>1007.1</td>\n","      <td>8.0</td>\n","      <td>NaN</td>\n","      <td>16.9</td>\n","      <td>21.8</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>12</td>\n","      <td>1</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Albury</td>\n","      <td>7.4</td>\n","      <td>25.1</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>WNW</td>\n","      <td>44.0</td>\n","      <td>NNW</td>\n","      <td>WSW</td>\n","      <td>...</td>\n","      <td>1007.8</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>17.2</td>\n","      <td>24.3</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>12</td>\n","      <td>2</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Albury</td>\n","      <td>12.9</td>\n","      <td>25.7</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>WSW</td>\n","      <td>46.0</td>\n","      <td>W</td>\n","      <td>WSW</td>\n","      <td>...</td>\n","      <td>1008.7</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","      <td>21.0</td>\n","      <td>23.2</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>12</td>\n","      <td>3</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Albury</td>\n","      <td>9.2</td>\n","      <td>28.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NE</td>\n","      <td>24.0</td>\n","      <td>SE</td>\n","      <td>E</td>\n","      <td>...</td>\n","      <td>1012.8</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>18.1</td>\n","      <td>26.5</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>12</td>\n","      <td>4</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Albury</td>\n","      <td>17.5</td>\n","      <td>32.3</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>W</td>\n","      <td>41.0</td>\n","      <td>ENE</td>\n","      <td>NW</td>\n","      <td>...</td>\n","      <td>1006.0</td>\n","      <td>7.0</td>\n","      <td>8.0</td>\n","      <td>17.8</td>\n","      <td>29.7</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>12</td>\n","      <td>5</td>\n","      <td>2008</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 25 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0d2e2764-2d11-4c90-8563-8040723c2ab4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0d2e2764-2d11-4c90-8563-8040723c2ab4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0d2e2764-2d11-4c90-8563-8040723c2ab4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["for df2 in [df]:\n","    df2['WindGustDir'].fillna(df['WindGustDir'].mode()[0], inplace=True)\n","    df2['WindDir9am'].fillna(df['WindDir9am'].mode()[0], inplace=True)\n","    df2['WindDir3pm'].fillna(df['WindDir3pm'].mode()[0], inplace=True)\n","    df2['RainToday'].fillna(df['RainToday'].mode()[0], inplace=True)"],"metadata":{"id":"zwp4Ee_IFUQx","executionInfo":{"status":"ok","timestamp":1667808695104,"user_tz":-180,"elapsed":28,"user":{"displayName":"Sibel Kapan","userId":"17947474169613013829"}}},"execution_count":40,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":299},"id":"Gxg2S25W-guC","executionInfo":{"status":"ok","timestamp":1667808695104,"user_tz":-180,"elapsed":27,"user":{"displayName":"Sibel Kapan","userId":"17947474169613013829"}},"outputId":"d1274dd3-9b27-4651-f1f3-f8b92c5b8175"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Location  MinTemp  MaxTemp  Rainfall  Evaporation  Sunshine WindGustDir  \\\n","0   Albury     13.4     22.9       0.6          NaN       NaN           W   \n","1   Albury      7.4     25.1       0.0          NaN       NaN         WNW   \n","2   Albury     12.9     25.7       0.0          NaN       NaN         WSW   \n","3   Albury      9.2     28.0       0.0          NaN       NaN          NE   \n","4   Albury     17.5     32.3       1.0          NaN       NaN           W   \n","\n","   WindGustSpeed WindDir9am WindDir3pm  ...  Pressure3pm  Cloud9am  Cloud3pm  \\\n","0           44.0          W        WNW  ...       1007.1       8.0       NaN   \n","1           44.0        NNW        WSW  ...       1007.8       NaN       NaN   \n","2           46.0          W        WSW  ...       1008.7       NaN       2.0   \n","3           24.0         SE          E  ...       1012.8       NaN       NaN   \n","4           41.0        ENE         NW  ...       1006.0       7.0       8.0   \n","\n","   Temp9am  Temp3pm  RainToday  RainTomorrow  Month  Day  Year  \n","0     16.9     21.8         No            No     12    1  2008  \n","1     17.2     24.3         No            No     12    2  2008  \n","2     21.0     23.2         No            No     12    3  2008  \n","3     18.1     26.5         No            No     12    4  2008  \n","4     17.8     29.7         No            No     12    5  2008  \n","\n","[5 rows x 25 columns]"],"text/html":["\n","  <div id=\"df-6239d0ae-19bd-4191-aff2-603f38e0fb6c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Location</th>\n","      <th>MinTemp</th>\n","      <th>MaxTemp</th>\n","      <th>Rainfall</th>\n","      <th>Evaporation</th>\n","      <th>Sunshine</th>\n","      <th>WindGustDir</th>\n","      <th>WindGustSpeed</th>\n","      <th>WindDir9am</th>\n","      <th>WindDir3pm</th>\n","      <th>...</th>\n","      <th>Pressure3pm</th>\n","      <th>Cloud9am</th>\n","      <th>Cloud3pm</th>\n","      <th>Temp9am</th>\n","      <th>Temp3pm</th>\n","      <th>RainToday</th>\n","      <th>RainTomorrow</th>\n","      <th>Month</th>\n","      <th>Day</th>\n","      <th>Year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Albury</td>\n","      <td>13.4</td>\n","      <td>22.9</td>\n","      <td>0.6</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>W</td>\n","      <td>44.0</td>\n","      <td>W</td>\n","      <td>WNW</td>\n","      <td>...</td>\n","      <td>1007.1</td>\n","      <td>8.0</td>\n","      <td>NaN</td>\n","      <td>16.9</td>\n","      <td>21.8</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>12</td>\n","      <td>1</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Albury</td>\n","      <td>7.4</td>\n","      <td>25.1</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>WNW</td>\n","      <td>44.0</td>\n","      <td>NNW</td>\n","      <td>WSW</td>\n","      <td>...</td>\n","      <td>1007.8</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>17.2</td>\n","      <td>24.3</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>12</td>\n","      <td>2</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Albury</td>\n","      <td>12.9</td>\n","      <td>25.7</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>WSW</td>\n","      <td>46.0</td>\n","      <td>W</td>\n","      <td>WSW</td>\n","      <td>...</td>\n","      <td>1008.7</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","      <td>21.0</td>\n","      <td>23.2</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>12</td>\n","      <td>3</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Albury</td>\n","      <td>9.2</td>\n","      <td>28.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NE</td>\n","      <td>24.0</td>\n","      <td>SE</td>\n","      <td>E</td>\n","      <td>...</td>\n","      <td>1012.8</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>18.1</td>\n","      <td>26.5</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>12</td>\n","      <td>4</td>\n","      <td>2008</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Albury</td>\n","      <td>17.5</td>\n","      <td>32.3</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>W</td>\n","      <td>41.0</td>\n","      <td>ENE</td>\n","      <td>NW</td>\n","      <td>...</td>\n","      <td>1006.0</td>\n","      <td>7.0</td>\n","      <td>8.0</td>\n","      <td>17.8</td>\n","      <td>29.7</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>12</td>\n","      <td>5</td>\n","      <td>2008</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 25 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6239d0ae-19bd-4191-aff2-603f38e0fb6c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6239d0ae-19bd-4191-aff2-603f38e0fb6c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6239d0ae-19bd-4191-aff2-603f38e0fb6c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["df = pd.get_dummies(df, columns = ['Location', 'WindGustDir', 'WindDir9am', 'WindDir3pm'], dummy_na=True)"],"metadata":{"id":"2QwNZfIgqUxZ","executionInfo":{"status":"ok","timestamp":1667808695422,"user_tz":-180,"elapsed":14,"user":{"displayName":"Sibel Kapan","userId":"17947474169613013829"}}},"execution_count":42,"outputs":[]},{"cell_type":"code","source":["from sklearn.preprocessing import LabelEncoder\n","my_cols=['RainTomorrow', 'RainToday']\n","df[my_cols] = df[my_cols].apply(LabelEncoder().fit_transform)\n"],"metadata":{"id":"5IgGlGW4BLcC","executionInfo":{"status":"ok","timestamp":1667808695422,"user_tz":-180,"elapsed":13,"user":{"displayName":"Sibel Kapan","userId":"17947474169613013829"}}},"execution_count":43,"outputs":[]},{"cell_type":"code","source":["df.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":299},"id":"x_TXuTbE76dN","executionInfo":{"status":"ok","timestamp":1667808695423,"user_tz":-180,"elapsed":14,"user":{"displayName":"Sibel Kapan","userId":"17947474169613013829"}},"outputId":"67ad6a3d-09a5-4cba-921a-08b16ca62ce5"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   MinTemp  MaxTemp  Rainfall  Evaporation  Sunshine  WindGustSpeed  \\\n","0     13.4     22.9       0.6          NaN       NaN           44.0   \n","1      7.4     25.1       0.0          NaN       NaN           44.0   \n","2     12.9     25.7       0.0          NaN       NaN           46.0   \n","3      9.2     28.0       0.0          NaN       NaN           24.0   \n","4     17.5     32.3       1.0          NaN       NaN           41.0   \n","\n","   WindSpeed9am  WindSpeed3pm  Humidity9am  Humidity3pm  ...  WindDir3pm_NW  \\\n","0          20.0          24.0         71.0         22.0  ...              0   \n","1           4.0          22.0         44.0         25.0  ...              0   \n","2          19.0          26.0         38.0         30.0  ...              0   \n","3          11.0           9.0         45.0         16.0  ...              0   \n","4           7.0          20.0         82.0         33.0  ...              1   \n","\n","   WindDir3pm_S  WindDir3pm_SE  WindDir3pm_SSE  WindDir3pm_SSW  WindDir3pm_SW  \\\n","0             0              0               0               0              0   \n","1             0              0               0               0              0   \n","2             0              0               0               0              0   \n","3             0              0               0               0              0   \n","4             0              0               0               0              0   \n","\n","   WindDir3pm_W  WindDir3pm_WNW  WindDir3pm_WSW  WindDir3pm_nan  \n","0             0               1               0               0  \n","1             0               0               1               0  \n","2             0               0               1               0  \n","3             0               0               0               0  \n","4             0               0               0               0  \n","\n","[5 rows x 122 columns]"],"text/html":["\n","  <div id=\"df-4fd2f4b7-81b5-4b8b-aa6e-5c857dd1539c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MinTemp</th>\n","      <th>MaxTemp</th>\n","      <th>Rainfall</th>\n","      <th>Evaporation</th>\n","      <th>Sunshine</th>\n","      <th>WindGustSpeed</th>\n","      <th>WindSpeed9am</th>\n","      <th>WindSpeed3pm</th>\n","      <th>Humidity9am</th>\n","      <th>Humidity3pm</th>\n","      <th>...</th>\n","      <th>WindDir3pm_NW</th>\n","      <th>WindDir3pm_S</th>\n","      <th>WindDir3pm_SE</th>\n","      <th>WindDir3pm_SSE</th>\n","      <th>WindDir3pm_SSW</th>\n","      <th>WindDir3pm_SW</th>\n","      <th>WindDir3pm_W</th>\n","      <th>WindDir3pm_WNW</th>\n","      <th>WindDir3pm_WSW</th>\n","      <th>WindDir3pm_nan</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>13.4</td>\n","      <td>22.9</td>\n","      <td>0.6</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>44.0</td>\n","      <td>20.0</td>\n","      <td>24.0</td>\n","      <td>71.0</td>\n","      <td>22.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>7.4</td>\n","      <td>25.1</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>44.0</td>\n","      <td>4.0</td>\n","      <td>22.0</td>\n","      <td>44.0</td>\n","      <td>25.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>12.9</td>\n","      <td>25.7</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>46.0</td>\n","      <td>19.0</td>\n","      <td>26.0</td>\n","      <td>38.0</td>\n","      <td>30.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>9.2</td>\n","      <td>28.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>24.0</td>\n","      <td>11.0</td>\n","      <td>9.0</td>\n","      <td>45.0</td>\n","      <td>16.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>17.5</td>\n","      <td>32.3</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>41.0</td>\n","      <td>7.0</td>\n","      <td>20.0</td>\n","      <td>82.0</td>\n","      <td>33.0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 122 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4fd2f4b7-81b5-4b8b-aa6e-5c857dd1539c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4fd2f4b7-81b5-4b8b-aa6e-5c857dd1539c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4fd2f4b7-81b5-4b8b-aa6e-5c857dd1539c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["list(df.columns)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zoIWl--Z68db","executionInfo":{"status":"ok","timestamp":1667808695743,"user_tz":-180,"elapsed":332,"user":{"displayName":"Sibel Kapan","userId":"17947474169613013829"}},"outputId":"dea4cbdb-98ac-4f76-9d5e-9a08e19980fe"},"execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['MinTemp',\n"," 'MaxTemp',\n"," 'Rainfall',\n"," 'Evaporation',\n"," 'Sunshine',\n"," 'WindGustSpeed',\n"," 'WindSpeed9am',\n"," 'WindSpeed3pm',\n"," 'Humidity9am',\n"," 'Humidity3pm',\n"," 'Pressure9am',\n"," 'Pressure3pm',\n"," 'Cloud9am',\n"," 'Cloud3pm',\n"," 'Temp9am',\n"," 'Temp3pm',\n"," 'RainToday',\n"," 'RainTomorrow',\n"," 'Month',\n"," 'Day',\n"," 'Year',\n"," 'Location_Adelaide',\n"," 'Location_Albany',\n"," 'Location_Albury',\n"," 'Location_AliceSprings',\n"," 'Location_BadgerysCreek',\n"," 'Location_Ballarat',\n"," 'Location_Bendigo',\n"," 'Location_Brisbane',\n"," 'Location_Cairns',\n"," 'Location_Canberra',\n"," 'Location_Cobar',\n"," 'Location_CoffsHarbour',\n"," 'Location_Dartmoor',\n"," 'Location_Darwin',\n"," 'Location_GoldCoast',\n"," 'Location_Hobart',\n"," 'Location_Katherine',\n"," 'Location_Launceston',\n"," 'Location_Melbourne',\n"," 'Location_MelbourneAirport',\n"," 'Location_Mildura',\n"," 'Location_Moree',\n"," 'Location_MountGambier',\n"," 'Location_MountGinini',\n"," 'Location_Newcastle',\n"," 'Location_Nhil',\n"," 'Location_NorahHead',\n"," 'Location_NorfolkIsland',\n"," 'Location_Nuriootpa',\n"," 'Location_PearceRAAF',\n"," 'Location_Penrith',\n"," 'Location_Perth',\n"," 'Location_PerthAirport',\n"," 'Location_Portland',\n"," 'Location_Richmond',\n"," 'Location_Sale',\n"," 'Location_SalmonGums',\n"," 'Location_Sydney',\n"," 'Location_SydneyAirport',\n"," 'Location_Townsville',\n"," 'Location_Tuggeranong',\n"," 'Location_Uluru',\n"," 'Location_WaggaWagga',\n"," 'Location_Walpole',\n"," 'Location_Watsonia',\n"," 'Location_Williamtown',\n"," 'Location_Witchcliffe',\n"," 'Location_Wollongong',\n"," 'Location_Woomera',\n"," 'Location_nan',\n"," 'WindGustDir_E',\n"," 'WindGustDir_ENE',\n"," 'WindGustDir_ESE',\n"," 'WindGustDir_N',\n"," 'WindGustDir_NE',\n"," 'WindGustDir_NNE',\n"," 'WindGustDir_NNW',\n"," 'WindGustDir_NW',\n"," 'WindGustDir_S',\n"," 'WindGustDir_SE',\n"," 'WindGustDir_SSE',\n"," 'WindGustDir_SSW',\n"," 'WindGustDir_SW',\n"," 'WindGustDir_W',\n"," 'WindGustDir_WNW',\n"," 'WindGustDir_WSW',\n"," 'WindGustDir_nan',\n"," 'WindDir9am_E',\n"," 'WindDir9am_ENE',\n"," 'WindDir9am_ESE',\n"," 'WindDir9am_N',\n"," 'WindDir9am_NE',\n"," 'WindDir9am_NNE',\n"," 'WindDir9am_NNW',\n"," 'WindDir9am_NW',\n"," 'WindDir9am_S',\n"," 'WindDir9am_SE',\n"," 'WindDir9am_SSE',\n"," 'WindDir9am_SSW',\n"," 'WindDir9am_SW',\n"," 'WindDir9am_W',\n"," 'WindDir9am_WNW',\n"," 'WindDir9am_WSW',\n"," 'WindDir9am_nan',\n"," 'WindDir3pm_E',\n"," 'WindDir3pm_ENE',\n"," 'WindDir3pm_ESE',\n"," 'WindDir3pm_N',\n"," 'WindDir3pm_NE',\n"," 'WindDir3pm_NNE',\n"," 'WindDir3pm_NNW',\n"," 'WindDir3pm_NW',\n"," 'WindDir3pm_S',\n"," 'WindDir3pm_SE',\n"," 'WindDir3pm_SSE',\n"," 'WindDir3pm_SSW',\n"," 'WindDir3pm_SW',\n"," 'WindDir3pm_W',\n"," 'WindDir3pm_WNW',\n"," 'WindDir3pm_WSW',\n"," 'WindDir3pm_nan']"]},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["numerical = [var for var in df.columns if df[var].dtype!='O']\n","\n","print('There are {} numerical variables\\n'.format(len(numerical)))\n","\n","print('The numerical variables are :', numerical)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"K9piQ9Eqtiud","executionInfo":{"status":"ok","timestamp":1667808695743,"user_tz":-180,"elapsed":6,"user":{"displayName":"Sibel Kapan","userId":"17947474169613013829"}},"outputId":"ec5d523e-349d-4f57-d823-4d9d77366a52"},"execution_count":46,"outputs":[{"output_type":"stream","name":"stdout","text":["There are 122 numerical variables\n","\n","The numerical variables are : ['MinTemp', 'MaxTemp', 'Rainfall', 'Evaporation', 'Sunshine', 'WindGustSpeed', 'WindSpeed9am', 'WindSpeed3pm', 'Humidity9am', 'Humidity3pm', 'Pressure9am', 'Pressure3pm', 'Cloud9am', 'Cloud3pm', 'Temp9am', 'Temp3pm', 'RainToday', 'RainTomorrow', 'Month', 'Day', 'Year', 'Location_Adelaide', 'Location_Albany', 'Location_Albury', 'Location_AliceSprings', 'Location_BadgerysCreek', 'Location_Ballarat', 'Location_Bendigo', 'Location_Brisbane', 'Location_Cairns', 'Location_Canberra', 'Location_Cobar', 'Location_CoffsHarbour', 'Location_Dartmoor', 'Location_Darwin', 'Location_GoldCoast', 'Location_Hobart', 'Location_Katherine', 'Location_Launceston', 'Location_Melbourne', 'Location_MelbourneAirport', 'Location_Mildura', 'Location_Moree', 'Location_MountGambier', 'Location_MountGinini', 'Location_Newcastle', 'Location_Nhil', 'Location_NorahHead', 'Location_NorfolkIsland', 'Location_Nuriootpa', 'Location_PearceRAAF', 'Location_Penrith', 'Location_Perth', 'Location_PerthAirport', 'Location_Portland', 'Location_Richmond', 'Location_Sale', 'Location_SalmonGums', 'Location_Sydney', 'Location_SydneyAirport', 'Location_Townsville', 'Location_Tuggeranong', 'Location_Uluru', 'Location_WaggaWagga', 'Location_Walpole', 'Location_Watsonia', 'Location_Williamtown', 'Location_Witchcliffe', 'Location_Wollongong', 'Location_Woomera', 'Location_nan', 'WindGustDir_E', 'WindGustDir_ENE', 'WindGustDir_ESE', 'WindGustDir_N', 'WindGustDir_NE', 'WindGustDir_NNE', 'WindGustDir_NNW', 'WindGustDir_NW', 'WindGustDir_S', 'WindGustDir_SE', 'WindGustDir_SSE', 'WindGustDir_SSW', 'WindGustDir_SW', 'WindGustDir_W', 'WindGustDir_WNW', 'WindGustDir_WSW', 'WindGustDir_nan', 'WindDir9am_E', 'WindDir9am_ENE', 'WindDir9am_ESE', 'WindDir9am_N', 'WindDir9am_NE', 'WindDir9am_NNE', 'WindDir9am_NNW', 'WindDir9am_NW', 'WindDir9am_S', 'WindDir9am_SE', 'WindDir9am_SSE', 'WindDir9am_SSW', 'WindDir9am_SW', 'WindDir9am_W', 'WindDir9am_WNW', 'WindDir9am_WSW', 'WindDir9am_nan', 'WindDir3pm_E', 'WindDir3pm_ENE', 'WindDir3pm_ESE', 'WindDir3pm_N', 'WindDir3pm_NE', 'WindDir3pm_NNE', 'WindDir3pm_NNW', 'WindDir3pm_NW', 'WindDir3pm_S', 'WindDir3pm_SE', 'WindDir3pm_SSE', 'WindDir3pm_SSW', 'WindDir3pm_SW', 'WindDir3pm_W', 'WindDir3pm_WNW', 'WindDir3pm_WSW', 'WindDir3pm_nan']\n"]}]},{"cell_type":"code","source":["df[numerical].isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BAnU9o6Gsuhv","executionInfo":{"status":"ok","timestamp":1667808695743,"user_tz":-180,"elapsed":5,"user":{"displayName":"Sibel Kapan","userId":"17947474169613013829"}},"outputId":"c56b0497-e285-4bac-fc31-e7451806e061"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["MinTemp            1485\n","MaxTemp            1261\n","Rainfall           3261\n","Evaporation       62790\n","Sunshine          69835\n","                  ...  \n","WindDir3pm_SW         0\n","WindDir3pm_W          0\n","WindDir3pm_WNW        0\n","WindDir3pm_WSW        0\n","WindDir3pm_nan        0\n","Length: 122, dtype: int64"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["plt.figure(figsize=(15,10))\n","\n","\n","plt.subplot(2, 2, 1)\n","fig = df.boxplot(column='Rainfall')\n","fig.set_title('')\n","fig.set_ylabel('Rainfall')\n","\n","\n","plt.subplot(2, 2, 2)\n","fig = df.boxplot(column='Evaporation')\n","fig.set_title('')\n","fig.set_ylabel('Evaporation')\n","\n","\n","plt.subplot(2, 2, 3)\n","fig = df.boxplot(column='WindSpeed9am')\n","fig.set_title('')\n","fig.set_ylabel('WindSpeed9am')\n","\n","\n","plt.subplot(2, 2, 4)\n","fig = df.boxplot(column='WindSpeed3pm')\n","fig.set_title('')\n","fig.set_ylabel('WindSpeed3pm')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":609},"id":"BzEFG30SEUAj","executionInfo":{"status":"ok","timestamp":1667808696872,"user_tz":-180,"elapsed":1131,"user":{"displayName":"Sibel Kapan","userId":"17947474169613013829"}},"outputId":"f81d9302-de99-41e2-f995-546d44346327"},"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0, 0.5, 'WindSpeed3pm')"]},"metadata":{},"execution_count":48},{"output_type":"display_data","data":{"text/plain":["<Figure size 1080x720 with 4 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# plot histogram to check distribution\n","\n","plt.figure(figsize=(15,10))\n","\n","\n","plt.subplot(2, 2, 1)\n","fig = df.Rainfall.hist(bins=10)\n","fig.set_xlabel('Rainfall')\n","fig.set_ylabel('RainTomorrow')\n","\n","\n","plt.subplot(2, 2, 2)\n","fig = df.Evaporation.hist(bins=10)\n","fig.set_xlabel('Evaporation')\n","fig.set_ylabel('RainTomorrow')\n","\n","\n","plt.subplot(2, 2, 3)\n","fig = df.WindSpeed9am.hist(bins=10)\n","fig.set_xlabel('WindSpeed9am')\n","fig.set_ylabel('RainTomorrow')\n","\n","\n","plt.subplot(2, 2, 4)\n","fig = df.WindSpeed3pm.hist(bins=10)\n","fig.set_xlabel('WindSpeed3pm')\n","fig.set_ylabel('RainTomorrow')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":623},"id":"WvLOYF4qEkYY","executionInfo":{"status":"ok","timestamp":1667808697908,"user_tz":-180,"elapsed":1042,"user":{"displayName":"Sibel Kapan","userId":"17947474169613013829"}},"outputId":"b02316a4-e774-4ec5-c126-7556bfeff91f"},"execution_count":49,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0, 0.5, 'RainTomorrow')"]},"metadata":{},"execution_count":49},{"output_type":"display_data","data":{"text/plain":["<Figure size 1080x720 with 4 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["df1 = df.dropna()"],"metadata":{"id":"G24lj3zbHyJl","executionInfo":{"status":"ok","timestamp":1667808699075,"user_tz":-180,"elapsed":4,"user":{"displayName":"Sibel Kapan","userId":"17947474169613013829"}}},"execution_count":50,"outputs":[]},{"cell_type":"code","source":["X = df1.drop(['RainTomorrow'], axis=1)\n","\n","y = df1['RainTomorrow']"],"metadata":{"id":"8TDivD9JuEXb","executionInfo":{"status":"ok","timestamp":1667808700854,"user_tz":-180,"elapsed":445,"user":{"displayName":"Sibel Kapan","userId":"17947474169613013829"}}},"execution_count":51,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)"],"metadata":{"id":"yjPvN2c2uJH4","executionInfo":{"status":"ok","timestamp":1667808707999,"user_tz":-180,"elapsed":334,"user":{"displayName":"Sibel Kapan","userId":"17947474169613013829"}}},"execution_count":52,"outputs":[]},{"cell_type":"code","source":["X_train.shape, X_test.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1B4iUphcuJE4","executionInfo":{"status":"ok","timestamp":1667808710464,"user_tz":-180,"elapsed":284,"user":{"displayName":"Sibel Kapan","userId":"17947474169613013829"}},"outputId":"9fa02b09-1bfc-44bc-90dd-4ffc2622e6f0"},"execution_count":53,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((46588, 121), (11648, 121))"]},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["# train a logistic regression model on the training set\n","from sklearn.linear_model import LogisticRegression\n","\n","\n","# instantiate the model\n","model = LogisticRegression(solver='liblinear', random_state=0)\n","\n","\n","# fit the model\n","model.fit(X_train, y_train)"],"metadata":{"id":"popj8AlzvPiF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667808722112,"user_tz":-180,"elapsed":4934,"user":{"displayName":"Sibel Kapan","userId":"17947474169613013829"}},"outputId":"9dc387eb-b9b2-48fc-fae7-10a4f4cae4e4"},"execution_count":54,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression(random_state=0, solver='liblinear')"]},"metadata":{},"execution_count":54}]},{"cell_type":"code","source":["y_pred = model.predict(X_test)\n","\n","y_pred"],"metadata":{"id":"sns3JsElvPcU","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667808726898,"user_tz":-180,"elapsed":7,"user":{"displayName":"Sibel Kapan","userId":"17947474169613013829"}},"outputId":"f8addf58-0fde-453b-e5f0-39a4f548545a"},"execution_count":55,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 0, 0, ..., 0, 0, 0])"]},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score\n","\n","print('Model accuracy score: {0:0.4f}'. format(accuracy_score(y_test, y_pred)))"],"metadata":{"id":"DceINU_AvPZr","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667808729766,"user_tz":-180,"elapsed":9,"user":{"displayName":"Sibel Kapan","userId":"17947474169613013829"}},"outputId":"ef7bf6f2-aeeb-4dfa-eaf4-e6b5605c9ed6"},"execution_count":56,"outputs":[{"output_type":"stream","name":"stdout","text":["Model accuracy score: 0.8594\n"]}]}]}